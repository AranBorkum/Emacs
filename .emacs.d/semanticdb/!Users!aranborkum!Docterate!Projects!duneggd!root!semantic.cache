;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("drawFGT" function
               (:arguments 
                  ( ("volName" variable
                       (:default-value "\"\""
                        :type ("TString" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [110 129]))                  
                :type "int")
                nil [102 3743]))          
      :file "drawFGT.C"
      :pointmax 3745
      :fsize 3744
      :lastmodtime '(23778 54554 540609 387000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("drawLArND" function
               (:arguments 
                  ( ("volName" variable
                       (:default-value "\"\""
                        :type ("TString" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [112 131]))                  
                :type "int")
                nil [102 2459]))          
      :file "drawLArND.C"
      :pointmax 2461
      :fsize 2460
      :lastmodtime '(23778 54554 540738 63000)
      :unmatched-syntax nil)

    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("TGeoManager.h" include nil nil [1 25])
            ("drawLArFD" function
               (:arguments 
                  ( ("volName" variable
                       (:default-value "\"\""
                        :type ("TString" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [143 162]))                  
                :type "void")
                nil [128 1470]))          
      :file "drawLArFD.C"
      :pointmax 1472
      :fsize 1471
      :lastmodtime '(23778 54925 444023 626000)
      :unmatched-syntax nil))
  :file "!Users!aranborkum!Docterate!Projects!duneggd!root!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
