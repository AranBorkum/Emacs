;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("numpy" include nil nil [1 19])
            ("matplotlib.pyplot" include nil nil [20 51])
            ("Jeromy.core.true_solar" include nil nil [53 96])
            ("Jeromy.IO.FileImporter" include nil nil [97 132])
            ("Jeromy.IO.ImportDataHighZ" include nil nil [133 175])
            ("Jeromy.IO.ImportDataLowZ" include nil nil [176 217])
            ("Jeromy.utilities.helpers" include nil nil [218 254])
            ("tqdm" include nil nil [256 277])
            ("math" include nil nil [278 300])
            ("lmfit.models" include nil nil [301 339])
            ("lmfit.models" include nil nil [340 384])
            ("DiscoveryCNO" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [467 487])
                            ("self" variable nil (reparse-symbol indented_block_body) [496 513])
                            ("self" variable nil (reparse-symbol indented_block_body) [522 541])
                            ("self" variable nil (reparse-symbol indented_block_body) [550 589])
                            ("if" code nil (reparse-symbol indented_block_body) [599 1591])
                            ("if" code nil (reparse-symbol indented_block_body) [1599 2590])
                            ("self" variable nil (reparse-symbol indented_block_body) [2599 2649])
                            ("self" variable nil (reparse-symbol indented_block_body) [2658 2708])
                            ("self" code nil (reparse-symbol indented_block_body) [2730 3090])
                            ("self" code nil (reparse-symbol indented_block_body) [3099 3523])
                            ("cno_injected_likelihood" variable nil (reparse-symbol indented_block_body) [3534 3578])
                            ("background_only_likelihood" variable nil (reparse-symbol indented_block_body) [3587 3636])
                            ("cno_hist" variable nil (reparse-symbol indented_block_body) [3645 3698])
                            ("bkg_hist" variable nil (reparse-symbol indented_block_body) [3707 3763])
                            ("plt" code nil (reparse-symbol indented_block_body) [3772 3783])
                            ("cno_normalised_likelihoods" variable nil (reparse-symbol indented_block_body) [3793 3863])
                            ("cno_bin_values" variable nil (reparse-symbol indented_block_body) [3872 3917])
                            ("bkg_normalised_likelihoods" variable nil (reparse-symbol indented_block_body) [3926 3996])
                            ("bkg_bin_values" variable nil (reparse-symbol indented_block_body) [4005 4050])
                            ("self" variable nil (reparse-symbol indented_block_body) [4060 4135])
                            ("self" variable nil (reparse-symbol indented_block_body) [4144 4222])
                            ("self" variable nil (reparse-symbol indented_block_body) [4231 4272])
                            ("self" variable nil (reparse-symbol indented_block_body) [4281 4322]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [426 430])
                            ("config" variable nil (reparse-symbol function_parameters) [432 438])
                            ("roi" variable nil (reparse-symbol function_parameters) [440 443])
                            ("nToys" variable nil (reparse-symbol function_parameters) [445 450]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [413 4323])
                    ("mean_and_sigma" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4348 4352])
                            ("x_values" variable nil (reparse-symbol function_parameters) [4354 4362])
                            ("y_values" variable nil (reparse-symbol function_parameters) [4364 4372]))                          )
                        (reparse-symbol indented_block_body) [4329 4724])
                    ("fit_model" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4762 4766]))                          )
                        (reparse-symbol indented_block_body) [4748 6090])
                    ("poisson_likelihood" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6128 6132])
                            ("signal" variable nil (reparse-symbol function_parameters) [6134 6140])
                            ("background" variable nil (reparse-symbol function_parameters) [6142 6152]))                          )
                        (reparse-symbol indented_block_body) [6105 6575])
                    ("run_toys" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7046 7050])
                            ("SignalToys" variable nil (reparse-symbol function_parameters) [7052 7062]))                          )
                        (reparse-symbol indented_block_body) [7033 10515]))                  
                :type "class")
                nil [386 10515]))          
      :file "cno_discovery.py"
      :pointmax 10515
      :fsize 10514
      :lastmodtime '(25360 37208 232758 408000)
      :unmatched-syntax nil))
  :file "!Users!aranborkum!Docterate!Projects!SolarStuff!CNOFluxAnalysis!_Jeromy!Jeromy!analyzers!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
